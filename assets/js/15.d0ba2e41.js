(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{641:function(t,p,v){"use strict";v.r(p);var _=v(2),e=Object(_.a)({},(function(){var t=this,p=t.$createElement,v=t._self._c||p;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[t._v("办理网络适用一般程序查询工具")]),t._v(" "),v("p",[t._v("4.1 查询工具需求分析和设计")]),t._v(" "),v("p",[t._v("需求分析：")]),t._v(" "),v("p",[t._v("1、需求：点击每个流程节点要展示对应流程的内容")]),t._v(" "),v("p",[t._v("分析设计：要先梳理办理网络都有哪些流程，每个流程步骤之间的顺序是什么，比如A流程的下一个流程是什么，B流程的上一个流程是什么，C流程在不同的情况可能会有流程分支的情况，例如初查流程，如果满足立案条件则走立案流程，不满足则走不立案流程；")]),t._v(" "),v("p",[t._v("再根据梳理出来的流程使用pyqt5 UI界面开发技术，画流程图界面。每个流程节点是一个pyqt5的按钮部件，点击按钮后会展示该流程的内容。使用pyqt5的文本浏览器部件，展示流程的内容。每个pyqt5的按钮部件对应一个pyqt5的文本浏览器部件，也就是有多少流程节点，就有多少pyqt5的文本浏览器部件；点击一个pyqt5的按钮部件，就展现对应pyqt5的文本浏览器部件里面的内容。")]),t._v(" "),v("p",[t._v("2、需求：搜索流程名称后，能够展现该流程的内容")]),t._v(" "),v("p",[t._v("分析设计：当用户在文本输入框输入文字内容，点击搜索按钮后，程序首先要获取到用户输入的文本内容，要对输入的内容先做判断，判断输入的文本内容是否属于办理网络的流程，比如用户输入“举报”，则不属于办理网络的流程，则需要提示给用户相应的提示信息；如果用户输入的文本内容属于办理网络的流程，则根据流程名称找到对应pyqt5的文本浏览器部件，并展现部件内的流程内容，同时找到对应的pyqt5的按钮部件，使用qss语法是按钮变色高亮，给用户醒目展示；")]),t._v(" "),v("p",[t._v("3、需求：在流程内容里，展现每个流程的上一个流程和下一个流程，点击上一个或者下一个流程后，跳转到相应的流程。")]),t._v(" "),v("p",[t._v("分析设计：当点击“上一个或者下一个流程”后，程序必须获取到这个点击事件，因为获取到这个点击事件后，程序才能进行业务处理。")]),t._v(" "),v("p",[t._v("首先把上一个流程和下一个流程都做成超链接，使用pyqt5的文本浏览器部件的anchorClicked事件方法，该事件会获取到用户点击的超链接的点击事件，在点击事件里，获取到点击的超链接绑定的流程名称，根据流程名称查找对应的pyqt5的文本浏览器部件，并展现部件内的流程内容，同时找到对应的pyqt5的按钮部件，使用qss语法是按钮变色高亮，给用户醒目展示；")])])}),[],!1,null,null,null);p.default=e.exports}}]);