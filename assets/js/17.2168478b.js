(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{643:function(e,n,t){"use strict";t.r(n);var a=t(2),r=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[t("strong",[e._v("1.从数据接口特征考虑：")]),e._v("\n数据量大、允许调用-返回过程中有延迟，多线程同时调用不允许阻塞的情况应当使用异步接口。反之调用量不大但是需要实时响应，允许阻塞式调用的接口考虑使用同步接口。\n2.从现有系统提供的接口类型考虑：\n现有系统有的接口，并且能够满足当前业务量和业务场景的，尽量不做改动，以现有系统为准，减少系统集成工作量。\n3.从技术实现难度考虑：\n部分系统使用的语言不支持某些协议或数据格式，应当在该语言支持的协议或数据各种中进行选择。")]),e._v(" "),t("p",[e._v("同步还是异步？\nESB支持的协议（异步数据传输）\nActiveMQ是由Apache出品的，一款最流行的，能力强劲的开源消息总线。\nActiveMQ是一个完全支持JMS1.1和J2EE 1.4规范的 JMS Provider实现，它非常快速，支持多种语言的客户端和协议，而且可以非常容易的嵌入到企业的应用环境中，并有许多高级功能。")]),e._v(" "),t("p",[e._v("Apache Kafka是分布式发布-订阅消息系统。最初由LinkedIn公司开发，之后成为Apache项目的一部分。 Kafka是一种快速、可扩展的、设计内在就是分布式的，分区的和可复制的提交日志服务。推荐使用Kafka作为主题-订阅模式的数据传递接口。\nMQTT（ Message Queuing Telemetry Transport，消息队列遥测传输）是IBM开发的一个即时通讯协议，有可能成为物联网的重要组成部分。该协议支持所有平台，几乎可以把所有联网物品和外部连接起来，被用来当做传感器和致动器的通信协议。\nFTP 是File Transfer Protocol（文件传输协议）的英文简称，而中文简称为“文传协议”。用于Internet上的控制文件的双向传输。\nRedis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、 Key-Value数据库，并提供多种语言的API。")]),e._v(" "),t("p",[e._v("ESB支持的协议（同步接口调用）")]),e._v(" "),t("p",[e._v("超文本传输协议（ HTTP， HyperText Transfer Protocol)是互联网上应用最为广泛的一种网络协议。所有的WWW文件都必须遵守这个标准， HTTP协议采用了请求/响应模型。推荐使用HTTP作为同步式数据交互接口协议（如基于HTTP的RESTful风格接口） 。\nWeb Service也叫XML Web Service WebService是一种可以接收从Internet或者Intranet上的其它系统中传递过来的请求，轻量级的独立的通讯技术。是通过SOAP在Web上提供的软件服务，使用WSDL文件进行说明，并通过UDDI进行注册。")]),e._v(" "),t("p",[e._v("ESB支持的数据格式")]),e._v(" "),t("p",[e._v("JSON(JavaScript Object Notation, JS 对象标记) 是一种轻量级的数据交换格式。它基于 ECMAScript (w3c制定的js规范)的一个子集，采用完全独立于编程语言的文本格式来存储和表示数据。简洁和清晰的层次结构使得 JSON 成为理想的数据交换语言。推荐使用JSON作为数据交换格式。\nXML 指可扩展标记语言（ eXtensible Markup Language）。 XML 被设计用来传输和存储数据。它具有自行定义标签、自我描述等特点，是W3C推荐的标准之一。")]),e._v(" "),t("p",[e._v("TEXT "),t("strong",[e._v("普通文本，无特殊数据结构的文本字符串，主要用于非结构化的短报文的传输。 使用普通文本，建议统一使用UTF-8作为文本编码格式。")])]),e._v(" "),t("p",[e._v("业务场景： OAuth2.0\n用户\n用户中心 数据总线 前端服务器")]),e._v(" "),t("p",[e._v("HTTP RESTful接口 HTTP RESTful接口\nOauth认证和授权是典型的实时性要求高、调用量、数据量小的业务场景。\n用户中心在数据总线中注册Oauth相关的HTTP RESTful接口，由数据总线开放给前端服务器供其调用。在这个场景里面，作为接口提供方的用户中心，需要向数据总线提供HTTP接口的调用地址、相关文档、数字证书（如果存在）等信息。")]),e._v(" "),t("p",[e._v("KAFKA服务器 数据总线 KAFKA服务器\n缴费系统 消息推送\n缴费信息的推送对于实时性要求不高，允许延迟推送，可采用kafka作为消息中间件进行消息传输，缴费系统将自身需要发送给客户的缴费信息推送到自己的kafka主题，由数据总线对信息进行加工后，推送至消息推送的kafka主题，由消息推送服务读取后向用户推送缴费信息。在这个场景里面，消息推送作为接口的提供方，需要向数据总线提供传递数据用的kafka的地址、主题名、 数字证书（如果存在）等信息。同时，作为接口的使用方，缴费系统同样需要向数据总线提供接收数据的\nkafka的地址、主题名、数字证书（如果存在）等信息。\n业务场景：缴费信息推送")])])}),[],!1,null,null,null);n.default=r.exports}}]);