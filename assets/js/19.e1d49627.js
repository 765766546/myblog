(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{645:function(_,v,t){"use strict";t.r(v);var a=t(2),e=Object(a.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h2",{attrs:{id:"_1-1-直连设备接入概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-直连设备接入概述"}},[_._v("#")]),_._v(" "),t("a",{attrs:{href:""}},[_._v("1.1.直连设备接入概述")])]),_._v(" "),t("p",[_._v("IoT平台为具备联网能力的设备提供了设备端C SDK（Device SDK），方便具备TCP/IP协议栈的智能设备在模块中进行嵌入式开发直接连接到云端。")]),_._v(" "),t("p",[_._v("该方式常用于如智能家电设备、4G设备等接入物联网云端。SDK具备以下功能：")]),_._v(" "),t("p",[_._v("l  SDK提供各种不同CPU架构的C库，方便快捷将各种硬件设备快速安全地接入到IoT平台；")]),_._v(" "),t("p",[_._v("l  提供常用模组的例程示例，加快开发者开发周期；")]),_._v(" "),t("p",[_._v("l  提供透传固件，开发者可不用开发设备接入云平台的固件，便可将设备简单快速联网；")]),_._v(" "),t("p",[_._v("l  支持强大的数据端点，可将设备的运行状态、参数和报警信息映射到平台，方便设备的管理和监控，并能快捷将报警内容通过邮件、短信或应用推送给用户；")]),_._v(" "),t("p",[_._v("l  提供完善的硬件通讯协议，很好地支持各种产品的功能实现。")]),_._v(" "),t("h3",{attrs:{id:"_1-1-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1"}},[_._v("#")]),_._v(" [**1.1.1.")]),_._v(" "),t("p",[_._v("**主要特性]()")]),_._v(" "),t("p",[_._v("l  本地设备自动探测和扫描联网；")]),_._v(" "),t("p",[_._v("l  内置云端连接服务，无需额外对接开发；")]),_._v(" "),t("p",[_._v("l  支持内、外网网络自动检测和切换；")]),_._v(" "),t("p",[_._v("l  提供云端固件升级和远程配置、诊断和管理服务；")]),_._v(" "),t("p",[_._v("l  支持设备安全认证和数据加密机制；")]),_._v(" "),t("p",[_._v("l  纯C代码，支持ARM、x86、x64以及MIPS等不同处理器架构；")]),_._v(" "),t("p",[_._v("l  可移植性强，使用操作简单快捷。")]),_._v(" "),t("h3",{attrs:{id:"_1-1-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2"}},[_._v("#")]),_._v(" [**1.1.2.")]),_._v(" "),t("p",[_._v("**]()术语表")]),_._v(" "),t("p",[_._v("为了让您快速了解Device\nSDK，我们对其中的一些常用术语进行了解释，如下表：")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[_._v("术语")]),_._v(" "),t("th",[_._v("中文")]),_._v(" "),t("th",[_._v("说明")])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("Device")]),_._v(" "),t("td",[_._v("设备")]),_._v(" "),t("td",[_._v("指使用 SDK的硬件")])]),_._v(" "),t("tr",[t("td",[_._v("Service")]),_._v(" "),t("td",[_._v("服务器")]),_._v(" "),t("td",[_._v("指云平台，设备所要连接的服务器")])]),_._v(" "),t("tr",[t("td",[_._v("Internet")]),_._v(" "),t("td",[_._v("外网")]),_._v(" "),t("td",[_._v("指设备通过互联网连接到服务器的通道")])]),_._v(" "),t("tr",[t("td",[_._v("Intranet")]),_._v(" "),t("td",[_._v("内网")]),_._v(" "),t("td",[_._v("指设备通过本地udp通讯与APP之间连接的通道")])])])]),_._v(" "),t("h3",{attrs:{id:"_1-1-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3"}},[_._v("#")]),_._v(" [**1.1.3.")]),_._v(" "),t("p",[_._v("**系统架构]()")]),_._v(" "),t("p",[_._v("![直连设备接入（DeviceSDK）-1](file:///C:\\Users\\YANGJI~1\\AppData\\Local\\Temp\\msohtmlclip1\\01\\clip_image002.gif)")]),_._v(" "),t("h3",{attrs:{id:"_1-1-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-4"}},[_._v("#")]),_._v(" [**1.1.4.")]),_._v(" "),t("p",[_._v("**SDK]()接入流程概述")]),_._v(" "),t("p",[_._v("①　首先在"),t("a",{attrs:{href:"https://e/#/auth/login",target:"_blank",rel:"noopener noreferrer"}},[_._v("IoT平台"),t("OutboundLink")],1),_._v("上注册一个账号，并创建一个产品，这时可获得产品PID和产品KEY；")]),_._v(" "),t("p",[_._v("②　在平台上所创建的产品上的“设备管理”页面上添加接入设备的MAC地址；")]),_._v(" "),t("p",[_._v("③　然后转到接入设备开发，先选择对应模组SDK，定义修改数据类型；")]),_._v(" "),t("p",[_._v("④　初始化TCP并连接上云智易TCP服务器，将函数_send_cb()里面的数据通过外网发送出去，接收到外网数据后调用_receive_data()往SDK放入数据；")]),_._v(" "),t("p",[_._v("⑤　初始化UDP，将函数_send_cb()里面的数据通过外网发送出去，接收到外网数据后调用_receive_data()往SDK放入数据；")]),_._v(" "),t("p",[_._v("⑥　实现_write_flash_cb、_read_flash_cb、_send_cb、_receive_cb、_get_datapoint_cb、_set_datapoint_cb和_event_cb函数；")]),_._v(" "),t("p",[_._v("⑦　调用“_sdk_init()”初始化（当连接上外网TCP时调用_sdk_connect_cloud()启动外网通讯，如果断开即调用_sdk_disconnect_cloud()停止）；")]),_._v(" "),t("p",[_._v("⑧　循环执行“_sdk_process()”；")]),_._v(" "),t("p",[_._v("⑨　如果使用外网，需等待“EVENT_TYPE_ONLINE”事件触发后才能向服务器发送数据；")]),_._v(" "),t("p",[_._v("⑩　设备连接平台成功后，便可收发数据，如果需要使用到数据端点，请参考“数据端点文档”；")]),_._v(" "),t("p",[_._v("11　需要停止时，调用“_sdk_uninit()”停止SDK；")]),_._v(" "),t("p",[_._v("12　如需要重置SDK时，调用_sdk_reset();")]),_._v(" "),t("p",[_._v("13　如需要发送数据时，调用_update_datapoint();")]),_._v(" "),t("p",[_._v("14　如需要请求数据时，调用_request_event()。")]),_._v(" "),t("h2",{attrs:{id:"_1-2-设备sdk集成说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-设备sdk集成说明"}},[_._v("#")]),_._v(" "),t("a",{attrs:{href:""}},[_._v("1.2.设备")]),_._v("SDK集成说明")]),_._v(" "),t("h3",{attrs:{id:"_1-2-1-注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-注意事项"}},[_._v("#")]),_._v(" "),t("a",{attrs:{href:""}},[t("strong",[_._v("1.2.1.")]),_._v(" 注意事项")])]),_._v(" "),t("p",[_._v("使用本IoT平台设备SDK（ Device SDK）前，需要了解会有以下限制：")]),_._v(" "),t("p",[_._v("以linux为例：")]),_._v(" "),t("p",[_._v("l  单个SDK示例需要ram：4500bytes；")]),_._v(" "),t("p",[_._v("l  外网tcp缓存默认需要：2048bytes，根据设备资源可以设大。")]),_._v(" "),t("p",[_._v("l  存储flash空间：256bytes；")]),_._v(" "),t("p",[_._v("l  栈空间大小：4096bytes以上。")]),_._v(" "),t("h3",{attrs:{id:"_1-2-2-快速开始"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-快速开始"}},[_._v("#")]),_._v(" "),t("a",{attrs:{href:""}},[t("strong",[_._v("1.2.2.")]),_._v(" 快速开始")])]),_._v(" "),t("p",[_._v("1.2.2.1\n前置准备")]),_._v(" "),t("p",[_._v("IoT平台")]),_._v(" "),t("p",[_._v("l  在IoT平台上注册一个账号，在账号注册创建之后，登录"),t("a",{attrs:{href:"https://e/#/auth/login",target:"_blank",rel:"noopener noreferrer"}},[_._v("IoT平台"),t("OutboundLink")],1),_._v("并创建一个产品，获得企业ID、产品PID和产品Key；")]),_._v(" "),t("p",[_._v("l  在平台上所创建的产品上的“设备管理”页面上添加接入设备的MAC地址；")]),_._v(" "),t("p",[_._v("l  然后转到接入设备开发，先选择对应模组SDK，定义修改数据类型。")]),_._v(" "),t("p",[_._v("设备")]),_._v(" "),t("p",[_._v("l  创建并初始化TCP并连接上云智易TCP服务器，收发函数需要调用以下函数")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[_._v("方向")])]),_._v(" "),t("th",[t("strong",[_._v("函数")])]),_._v(" "),t("th",[t("strong",[_._v("说明")])])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("发送")]),_._v(" "),t("td",[_._v("_send_cb()")]),_._v(" "),t("td",[_._v("将函数里面的数据通过外网发送出去，flag = 1")])]),_._v(" "),t("tr",[t("td",[_._v("接收")]),_._v(" "),t("td",[_._v("_receive_data()")]),_._v(" "),t("td",[_._v("接收到外网数据后调用往SDK传入数据flag = 1")])])])]),_._v(" "),t("p",[_._v("l  创建并初始化UDP，收发函数需要调用以下函数")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[_._v("方向")])]),_._v(" "),t("th",[t("strong",[_._v("函数")])]),_._v(" "),t("th",[t("strong",[_._v("说明")])])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("发送")]),_._v(" "),t("td",[_._v("_send_cb()")]),_._v(" "),t("td",[_._v("将函数里面的数据通过内网发送出去，flag = 0")])]),_._v(" "),t("tr",[t("td",[_._v("接收")]),_._v(" "),t("td",[_._v("_receive_data()")]),_._v(" "),t("td",[_._v("接收到内网数据后调用往SDK传入数据flag = 0")])])])]),_._v(" "),t("p",[_._v("l  创建并实现flash/file接口函数，读/写范围是对指定区域进行读/写(覆盖），读写函数需要调用以下函数")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[_._v("方向")])]),_._v(" "),t("th",[t("strong",[_._v("函数")])]),_._v(" "),t("th",[t("strong",[_._v("说明")])])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("读取")]),_._v(" "),t("td",[_._v("_read_flash_cb()")]),_._v(" "),t("td",[_._v("将数据从指定的区域读取处理，并传入SDK")])]),_._v(" "),t("tr",[t("td",[_._v("写入")]),_._v(" "),t("td",[_._v("_write_flash_cb()")]),_._v(" "),t("td",[_._v("SDK将数据往指定的区域写入")])])])]),_._v(" "),t("p",[_._v("l  创建并实现运行时间记录函数")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[_._v("方向")])]),_._v(" "),t("th",[t("strong",[_._v("函数")])]),_._v(" "),t("th",[t("strong",[_._v("说明")])])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("读取")]),_._v(" "),t("td",[_._v("_get_ticktime_ms_cb")]),_._v(" "),t("td",[_._v("读取系统的运行时间，并非实时时间，以ms为单位")])])])]),_._v(" "),t("p",[_._v("l  创建并实现数据端点相关的函数")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[_._v("方向")])]),_._v(" "),t("th",[t("strong",[_._v("函数")])]),_._v(" "),t("th",[t("strong",[_._v("说明")])])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("方向")]),_._v(" "),t("td",[_._v("函数")]),_._v(" "),t("td",[_._v("说明")])]),_._v(" "),t("tr",[t("td",[_._v("读取")]),_._v(" "),t("td",[_._v("_get_datapoint_cb()")]),_._v(" "),t("td",[_._v("需要将数据端点往形参buf传入，函数返回整个数据长度，SDK将自动调取")])]),_._v(" "),t("tr",[t("td",[_._v("写入")]),_._v(" "),t("td",[_._v("_set_datapoint_cb()")]),_._v(" "),t("td",[_._v("SDK收到APP或平台的操作，调用该函数将数据端点传出，相关处理需要自行实现")])]),_._v(" "),t("tr",[t("td",[_._v("写入")]),_._v(" "),t("td",[_._v("_probe_datapoint_cb()")]),_._v(" "),t("td",[_._v("将数据端点上报到APP")])])])]),_._v(" "),t("p",[_._v("l  创建并实现系统事件回调函数")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[_._v("方向")])]),_._v(" "),t("th",[t("strong",[_._v("函数")])]),_._v(" "),t("th",[t("strong",[_._v("说明")])])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("NC")]),_._v(" "),t("td",[_._v("_event_cb()")]),_._v(" "),t("td",[_._v("具体查看下文API")])])])]),_._v(" "),t("p",[_._v("l  创建并实现其他函数")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[_._v("方向")])]),_._v(" "),t("th",[t("strong",[_._v("函数")])]),_._v(" "),t("th",[t("strong",[_._v("说明")])])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("读取")]),_._v(" "),t("td",[_._v("_get_rssi_cb()")]),_._v(" "),t("td",[_._v("具体查看下文API")])]),_._v(" "),t("tr",[t("td",[_._v("NC")]),_._v(" "),t("td",[_._v("_get_custom_test_data_cb()")]),_._v(" "),t("td",[_._v("具体查看下文API")])])])]),_._v(" "),t("p",[_._v("1.2.2.2\n运行")]),_._v(" "),t("p",[_._v("①　创建并初始化实参struct _sdk_instance_t，具体查看下文API;")]),_._v(" "),t("p",[_._v("②　调用“_sdk_init()”初始化;")]),_._v(" "),t("p",[_._v("③　循环执行“_sdk_process()”；")]),_._v(" "),t("p",[_._v("④　当连接上外网TCP时调用_sdk_connect_cloud()启动外网通讯，如果断开即调用_sdk_disconnect_cloud()停止）；")]),_._v(" "),t("p",[_._v("⑤　如果使用外网，需等待“EVENT_TYPE_STATUS”事件触发且status = 1，才能向服务器发送数据；")]),_._v(" "),t("p",[_._v("⑥　设备连接平台成功后，便可收发数据，如果需要使用到数据端点，请参考“数据端点文档”；")]),_._v(" "),t("p",[_._v("⑦　需要停止时，调用“_sdk_uninit()”停止SDK；")]),_._v(" "),t("p",[_._v("⑧　如需要重置SDK时，调用_sdk_reset();")]),_._v(" "),t("p",[_._v("⑨　如需要上报数据端点时，调用_update_datapoint();")]),_._v(" "),t("p",[_._v("⑩　如需要请求数据时，调用_request_event()。")]),_._v(" "),t("p",[_._v("1.2.2.3\nSDK导入及环境配置")]),_._v(" "),t("p",[_._v("SDK（ Device SDK），主要适应于C/C++，具体的开发环境根据不同的需要（win32/linux/gcc等）做不同的适配。")]),_._v(" "),t("h2",{attrs:{id:"_1-1-网关及子设备接入概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-网关及子设备接入概述"}},[_._v("#")]),_._v(" "),t("a",{attrs:{href:""}},[_._v("1.1.网关及子设备接入概述")])]),_._v(" "),t("h3",{attrs:{id:"_1-1-1-概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-概述"}},[_._v("#")]),_._v(" "),t("a",{attrs:{href:""}},[t("strong",[_._v("1.1.1.")]),_._v(" 概述")])]),_._v(" "),t("p",[_._v("Xlink IoT Gataway是IoT平台提供的一个敏捷、可扩展的物联网网关软件架构，可广泛适用于智能家居、智慧社区和智能商业等物联网的应用场景。通过Xlink IoT Gataway方案您可以快速开发网关应用，实现本地设备安全认证、协议转换和处理、执行本地计算、数据收发和缓存，支持云端及应用程序\n的数据采集、同步和远程访问控制。 Xlink IoT Gataway由Xlink Core Gateway和Xlink SEP 、Xlink PTP 三个部分构成。")]),_._v(" "),t("p",[_._v("应用与智能家居网关及子设备接入时，具备如下功能特性：")]),_._v(" "),t("p",[_._v("![网关及子设备接入（智能家居）-1](file:///C:\\Users\\YANGJI~1\\AppData\\Local\\Temp\\msohtmlclip1\\01\\clip_image002.gif)")]),_._v(" "),t("h3",{attrs:{id:"_1-1-2-xlink-core-gateway"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-xlink-core-gateway"}},[_._v("#")]),_._v(" "),t("a",{attrs:{href:""}},[t("strong",[_._v("1.1.2.")]),_._v(" Xlink Core Gateway")])]),_._v(" "),t("p",[_._v("l  Xlink Core Gateway（XCG）是Xlink网关的核心程序，提供网关的设备安全、消息处理，计算、 数据缓存和通信等服务。")]),_._v(" "),t("p",[_._v("l  XCG作为单独进程在OS中运行，通过进程通信与X-PTP，X-SEP应用进行交互。")]),_._v(" "),t("h3",{attrs:{id:"_1-1-3-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-2"}},[_._v("#")]),_._v(" [**1.1.3.")]),_._v(" "),t("p",[_._v("**Xlink PTP]()")]),_._v(" "),t("p",[_._v("Xlink Protocol Transform Processor （X-PTP ）：家庭网关协议转换进程，是一个开放的开发框架，基于其所开发的网关应用程序，我们称之为PTP应用，可用于实现子设备协议的转换和通信适配，也可以自定义数据和业务处理逻辑。")]),_._v(" "),t("p",[_._v("l  X-PTP 它用于实现子设备协议的转换和通信适配，也可以自定义数据和业务处理逻辑。")]),_._v(" "),t("p",[_._v("l  X-PTP 根据XCG提供的系列便捷的协议，使得您能够快速对接子设备，子设备可以是Z-wave、 Zigbee、BLE Mesh和RS-485等通信协议；")]),_._v(" "),t("p",[_._v("l  X-PTP应用程序会作为独立的进程在网关中运行，每个X-PTP进程可以处理不同类型的子设备接入协议。例如，您可以开发一个支持Zigbee HA的X-PTP程序，让网关支持Zigbee联盟标准的设备接入，同时也可以开发一个支持BLE Mesh或RS-485的X-PTP程序来实现相应的设备接入。")]),_._v(" "),t("p",[_._v("l  每个X-PTP进程都将连接到同一个本地的XCG进行统一的通信和管理。")]),_._v(" "),t("h3",{attrs:{id:"_1-1-4-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-4-2"}},[_._v("#")]),_._v(" [**1.1.4.")]),_._v(" "),t("p",[_._v("**网关及子设备接入架构]()")]),_._v(" "),t("p",[_._v("![](file:///C:\\Users\\YANGJI~1\\AppData\\Local\\Temp\\msohtmlclip1\\01\\clip_image004.jpg)")]),_._v(" "),t("h2",{attrs:{id:"_1-2-智能家居设备接入指引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-智能家居设备接入指引"}},[_._v("#")]),_._v(" "),t("a",{attrs:{href:""}},[_._v("1.2.智能家居设备接入指引")])]),_._v(" "),t("p",[_._v("该章节主要用于说明智能家居设备接入IoT平台的操作流程和方法。列举具体的网关产品及其下的家居网关设备，和相关的子设备产品及其下的灯开关设备为例子，具体说明网关设备和子设备的配置以及具体的技术实现，以帮助指导第三方系统开发人员独立完成子设备接入IoT网关的配置和开发工作。")]),_._v(" "),t("h3",{attrs:{id:"_1-2-1-名词解释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-名词解释"}},[_._v("#")]),_._v(" "),t("a",{attrs:{href:""}},[t("strong",[_._v("1.2.1.")]),_._v(" 名词解释")])]),_._v(" "),t("p",[_._v("网关程序（XCG）：预装在智能家居网关里的应用程序，会将智能家居网关以一个网关设备的身份接入到IoT平台，并提供子设备对接能力。")]),_._v(" "),t("p",[_._v("PTP：指网关子设备接入IoT平台的协议转换程序。")]),_._v(" "),t("p",[_._v("PID：ProductID的缩写，每个产品的唯一ID。")])])}),[],!1,null,null,null);v.default=e.exports}}]);